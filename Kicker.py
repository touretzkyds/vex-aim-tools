from aim_fsm import *

class Kicker(StateMachineProgram):
  def setup(self):
      #     Say('Kicking') =C=> Kick() =C=> Say('Kicked') =C=> {turner, talker} =C=> Say('Done')
      # 
      #     turner: Turn(200)
      # 
      #     talker: Say('I am turning')
      
      # Code generated by genfsm on Tue Sep  3 02:53:56 2024:
      
      say1 = Say('Kicking') .set_name("say1") .set_parent(self)
      kick1 = Kick() .set_name("kick1") .set_parent(self)
      say2 = Say('Kicked') .set_name("say2") .set_parent(self)
      say3 = Say('Done') .set_name("say3") .set_parent(self)
      turner = Turn(200) .set_name("turner") .set_parent(self)
      talker = Say('I am turning') .set_name("talker") .set_parent(self)
      
      completiontrans1 = CompletionTrans() .set_name("completiontrans1")
      completiontrans1 .add_sources(say1) .add_destinations(kick1)
      
      completiontrans2 = CompletionTrans() .set_name("completiontrans2")
      completiontrans2 .add_sources(kick1) .add_destinations(say2)
      
      completiontrans3 = CompletionTrans() .set_name("completiontrans3")
      completiontrans3 .add_sources(say2) .add_destinations(turner,talker)
      
      completiontrans4 = CompletionTrans() .set_name("completiontrans4")
      completiontrans4 .add_sources(turner,talker) .add_destinations(say3)
      
      return self

